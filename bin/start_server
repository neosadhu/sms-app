#!/bin/sh
set -a
 # automatically export all variables


# Function to install Python 3.11.4 based on the operating system
install_python() {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        # Linux
        if [[ -n "$(command -v apt-get)" ]]; then
            # Debian/Ubuntu
            echo "Installing Python"
            sudo apt-get update
            sudo apt-get install -y python3.11
        elif [[ -n "$(command -v yum)" ]]; then
            # CentOS/RHEL
            sudo yum update
            sudo yum install -y python3.11
        else
            echo "Unsupported package manager for Python installation. Exiting..."
            exit 1
        fi
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        if [[ -n "$(command -v brew)" ]]; then
            # Homebrew
            echo "Installing Python"
            brew update
            brew install python@3.11
        else
            echo "Homebrew package manager not found. Exiting..."
            exit 1
        fi
    else
        echo "Unsupported operating system. Exiting..."
        exit 1
    fi
}

# Check if Python 3.11.4 is installed
if ! command -v python3.11 &> /dev/null; then
    echo "Python 3.11.4 is not installed. Installing Python 3.11.4..."
    install_python
else
    echo "python3 already installed. Skipping installation"
    
    # Check if installation was successful
    if ! command -v python3.11 &> /dev/null; then
        echo "Python 3.11.4 installation failed. Exiting..."
        exit 1
    fi
fi

# Create and activate the virtual environment
echo "Setting up virtual environment"
python3.11 -m venv venv
source venv/bin/activate

# Install requirements from requirements.txt

if ! pip3 freeze -r requirements.txt >/dev/null 2>&1; then
    echo "Installing dependencies..."
    pip3 install -r requirements.txt

    echo "Dependcies completed successfully."

else
  echo "Skipping Installation.Dependencies are already installed."
fi


ROOTDIR=$(PWD)
PYTHONPATH=$ROOTDIR

OS=$(uname)

if [ "$OS" == "Darwin" ]; then
    # source $ROOTDIR/env/.envPrd
    source $ROOTDIR/env/.envLocal
elif [ "$os_type" == "Linux" ]; then
    source $ROOTDIR/env/.envPrd
fi

# #run on debug if enabled. 
if [ "$1" = "debug" ]; then
    echo "Debug mode"
    echo "Running flask app"
    flask --app $ROOTDIR/api/index.py --debug run

else
    echo "Running flask app"
    flask --app $ROOTDIR/api/index.py run  
fi
